{"version":3,"sources":["CountDown.js","Header.js","BorderStyle.js","ItemList.js","FetchData.js","App.js","reportWebVitals.js","index.js"],"names":["CountDown","useState","count","setCount","useEffect","timerId","setTimeout","prev","clearTimeout","className","Header","BorderStyle","children","ItemList","props","check","setCheck","edit","setEdit","todo","description","todoDesc","setTodoDesc","type","checked","onChange","value","e","target","style","textDecoration","deadline","onClick","deleteFunc","id","updateDescription","map","setValue","updateTodo","FetchData","inputText","setInputText","Date","startDate","setStartDate","fetch","then","response","json","result","deleteList","FilterValue","filter","item","onSubmit","preventDefault","htmlFor","selected","date","now","toLocaleDateString","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.14deec84.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nexport default function CountDown() {\n    const [count, setCount] = useState(0);\n\n\n\n    useEffect(() => {\n        const timerId = setTimeout(() => {\n            setCount(prev => prev + 1);\n        }, 1000);\n        return () => clearTimeout(timerId)\n    });\n\n\n\n    return (\n        <div className=\"Form-count\">\n            You have used {count} seconds on this website\n        </div>\n    );\n}\n\n","import React from 'react'\nexport default function Header() {\n    return (\n        <div className=\"App-header\">\n            <h1>Todo List</h1>\n        </div >\n\n    )\n}\n\n","import React from 'react'\n\nconst BorderStyle = ({ children }) => {\n    return (\n        <div>\n            {children}\n        </div >\n    )\n}\n\nexport default BorderStyle\n","import React, { useState } from 'react'\nimport BorderStyle from './BorderStyle'\n\nconst ItemList = (props) => {\n    const [check, setCheck] = useState(false)\n    const [edit, setEdit] = useState(false)\n    const [todoDesc, setTodoDesc] = useState(props.todo.description)\n\n    const editTodo = () => {\n        return setEdit(!edit)\n    }\n\n    const updateTodo = (id) => {\n        const updateDescription = props.value.map(todo => {\n            if (todo.id === id) {\n                return { ...todo, description: todoDesc }\n            } else return todo\n        })\n\n        props.setValue(updateDescription)\n        setEdit(false)\n\n    }\n\n    return (\n        <BorderStyle>\n            <li className=\" todo-item\" >\n                <input type=\"checkbox\" checked={check} onChange={() => setCheck(!check)} />\n                {!edit ? <span style={{ textDecoration: check ? \"line-through\" : \"none\" }}>{props.todo.description} | {props.todo.deadline}</span> : <input type=\"text\" value={todoDesc} onChange={(e) => { setTodoDesc(e.target.value) }} />}\n                <button onClick={() => props.deleteFunc(props.todo.id)}> Delete</button>\n                {!edit ? <button onClick={editTodo}>Edit</button> : <button onClick={() => updateTodo(props.todo.id)}>Update</button>}\n            </li>\n        </BorderStyle >\n    )\n}\n\nexport default ItemList","import React, { useState, useEffect } from 'react'\nimport ItemList from './ItemList'\nimport DatePicker from 'react-datepicker'\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n\n\nconst FetchData = () => {\n    const [value, setValue] = useState([])\n    const [inputText, setInputText] = useState(\" \")\n    const [startDate, setStartDate] = useState(new Date());\n\n\n    const API_URL = 'https://gist.githubusercontent.com/benna100/391eee7a119b50bd2c5960ab51622532/raw'\n\n    const FetchApi = () => {\n        fetch(API_URL)\n            .then(response => response.json())\n            .then(result =>\n                setValue(result)\n            )\n    }\n\n    useEffect(() => {\n        FetchApi()\n    }, [])\n\n    const deleteList = (id) => {\n        const FilterValue = value.filter(item => item.id !== id)\n        return setValue(FilterValue)\n    }\n\n    const addTodos = () => {\n        setValue((prev) => [...prev, {\n            id: Date.now(), description: inputText, deadline: startDate.toLocaleDateString()\n        }])\n    }\n\n    const submitForm = (e) => {\n        e.preventDefault()\n    }\n\n    return (\n        <div className=\"Form\">\n            <form onSubmit={submitForm}>\n                <div>\n                    <label htmlFor=\"Todo-Description\" className=\"label\">Todo Description </label>\n                    <input type=\"text\" id=\"Todo-Description\" value={inputText} onChange={(e) => setInputText(e.target.value)}></input>\n                </div>\n                <div>\n                    <label htmlFor=\"Todo-Deadline\" className=\"label\" ><br />Deadline\n                    </label> <DatePicker selected={startDate} onChange={(date) => setStartDate(date)} /><br />\n                </div>\n                <br />\n                <button onClick={addTodos}>Add todo</button>\n            </form>\n            <ul>\n\n                {value.map((todo) => <ItemList todo={todo} key={todo.id} deleteFunc={deleteList} value={value} setValue={setValue} />)}\n            </ul>\n        </div >\n    )\n}\n\n\nexport default FetchData","import CountDown from './CountDown'\nimport Header from './Header'\nimport FetchData from './FetchData'\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <CountDown />\n      < FetchData />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}